@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

/'First Interaction - Confirmation Request'/
[-> LogicManager : execute("delete 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete 1")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("1")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandParser :
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCommandParser -[hidden]-> AddressBookParser
destroy DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeleteCommand : execute(m)
activate DeleteCommand

create CommandResult
DeleteCommand -> CommandResult : new(confirmMessage, this)
activate CommandResult

CommandResult --> DeleteCommand : r
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

LogicManager -> CommandResult : getPendingConfirmation()
activate CommandResult

CommandResult --> LogicManager : d
deactivate CommandResult

[<--LogicManager : r
deactivate LogicManager

/'Second Interaction - After Confirmation'/
[-> LogicManager : execute(commandText)
activate LogicManager

alt commandText == "Y"
    LogicManager -> DeleteCommand : executeConfirmed(m)
    activate DeleteCommand

    DeleteCommand -> Model : deletePerson(personToDelete)
    activate Model
    Model --> DeleteCommand
    deactivate Model

    create CommandResult
    DeleteCommand -> CommandResult : new(successMessage)
    activate CommandResult
    CommandResult --> DeleteCommand : r
    deactivate CommandResult

    DeleteCommand --> LogicManager : r
    deactivate DeleteCommand

else commandText == "N"
    create CommandResult
    LogicManager -> CommandResult : new("Action cancelled.")
    activate CommandResult
    CommandResult --> LogicManager : r
    deactivate CommandResult
end

@enduml
